basePath: /api/v1
definitions:
  entities.Album:
    properties:
      artist:
        type: string
      has_read:
        type: boolean
      id:
        minimum: 1
        type: integer
      price:
        minimum: 0
        type: number
      title:
        type: string
    required:
    - artist
    - id
    - price
    - title
    type: object
  models.AlbumResponse:
    properties:
      artist:
        type: string
      content:
        type: string
      has_read:
        type: boolean
      id:
        type: integer
      price:
        type: number
      title:
        type: string
    type: object
  models.Error:
    properties:
      message:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a web api server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: ACY Golang Training API
  version: "1.0"
paths:
  /albums:
    get:
      consumes:
      - application/json
      description: Get Albums list with pagination
      operationId: get-albums-list
      parameters:
      - default: 0
        description: pagination current page
        in: query
        name: page
        required: true
        type: integer
      - default: 0
        description: pagination page_size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AlbumResponse'
            type: array
      tags:
      - Album
    post:
      description: Create new album
      operationId: create-new-album
      parameters:
      - description: album data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.Album'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Album'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
      tags:
      - Album
  /albums/{id}:
    delete:
      description: Delete Album By Id
      operationId: delete-albums-by-id
      parameters:
      - description: album Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
      tags:
      - Album
    get:
      description: Get Album By Id
      operationId: get-albums-by-id
      parameters:
      - description: album Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AlbumResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
      tags:
      - Album
swagger: "2.0"
